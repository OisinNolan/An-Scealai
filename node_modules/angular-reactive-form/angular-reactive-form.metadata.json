{"__symbolic":"module","version":4,"metadata":{"AngularReactiveFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"arf-angular-reactive-form","template":"\n    <p>\n      angular-reactive-form works!\n    </p>\n  ","styles":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"AngularReactiveFormModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":8,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":9,"character":12},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":9,"character":26},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"@tinymce/tinymce-angular","name":"EditorModule","line":9,"character":65}],"declarations":[{"__symbolic":"reference","name":"AngularReactiveFormComponent"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵn"}],"exports":[{"__symbolic":"reference","name":"AngularReactiveFormComponent"},{"__symbolic":"reference","name":"ɵl"}]}]}],"members":{}},"VALIDATOR_REQUIRED":"required","VALIDATOR_PATTERN":"pattern","VALIDATOR_MINLENGTH":"minlength","VALIDATOR_MAXLENGTH":"maxlength","CustomDropdown":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":6,"character":23,"module":"./lib/models/CustomDropdown"}]}]}},"TextBox":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":7,"character":23,"module":"./lib/models/TextBox"}]}]}},"DropZone":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":15,"character":23,"module":"./lib/models/DropZone"}]}]}},"CheckBox":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":5,"character":23,"module":"./lib/models/CheckBox"}]}]}},"Dropdown":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":6,"character":23,"module":"./lib/models/Dropdown"}]}]}},"ListCheckBox":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":6,"character":23,"module":"./lib/models/ListCheckBox"}]}]}},"Radio":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":7,"character":23,"module":"./lib/models/Radio"}]}]}},"TextBoxMask":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":9,"character":23,"module":"./lib/models/TextBoxMask"}]}]}},"TinyMce":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":8,"character":23,"module":"./lib/models/TinyMce"}]}]}},"DateTimePicker":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":12,"character":23,"module":"./lib/models/DateTimePicker"}]}]}},"PhoneCode":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":5,"character":23,"module":"./lib/models/PhoneCode"}]}]}},"Select2":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":8,"character":23,"module":"./lib/models/Select2"}]}]}},"InputBase":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":61,"character":13,"module":"./lib/models/InputBase"}]}]}},"CustomCheckBox":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":6,"character":23,"module":"./lib/models/CustomCheckbox"}]}]}},"TextArea":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":6,"character":23,"module":"./lib/models/TextArea"}]}]}},"UploadFile":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":13,"character":23,"module":"./lib/models/UploadFile"}]}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":24,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":26,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":27,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":28,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":29,"character":4},{"__symbolic":"reference","module":"angular2-text-mask","name":"TextMaskModule","line":30,"character":4},{"__symbolic":"reference","module":"ngx-dropzone-wrapper","name":"DropzoneModule","line":31,"character":4},{"__symbolic":"reference","module":"primeng/calendar","name":"CalendarModule","line":32,"character":4}],"exports":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"}],"providers":[{"provide":{"__symbolic":"reference","module":"ngx-dropzone-wrapper","name":"DROPZONE_CONFIG","line":47,"character":15},"useValue":{}}],"declarations":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"}]}]}],"members":{}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"custom-selection","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":11,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵb"},"multi":true}],"template":"<div class=\"dropdown custom-selection\">\n  <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    {{ selected === undefined ? '' : selected.label }}\n  </button>\n  <div class=\"dropdown-menu\">\n    <a class=\"dropdown-item\" *ngFor=\"let option of options\" (click)=\"change(option)\">{{ option.label }}</a>\n  </div>\n</div>\n","styles":[".custom-selection .dropdown-menu .dropdown-item{cursor:pointer}"]}]}],"members":{"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":26,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":26,"character":61}]}],"triggerChanged":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"change":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mask-input","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":10,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵc"},"multi":true}],"template":"<input class=\"form-control\" placeholder=\"{{placeholder}}\" [textMask]=\"{mask: inputMaskText, guide: guide}\" (change)=\"change()\" [(ngModel)]=\"myModel\" type=\"text\"/>","styles":[""]}]}],"members":{"inputMaskText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"guide":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"valueWithCharacter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":28,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":28,"character":61}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"change":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mutiple-checkbox","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":11,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵd"},"multi":true}],"template":"<div class=\"checkbox\" *ngFor=\"let list of options\">\n  <label>\n    <input type=\"checkbox\" value=\"{{list.value}}\" (change)=\"onCheckboxChange(list,$event)\">{{list.label}}</label>\n</div>","styles":[""]}]}],"members":{"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":29,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":29,"character":61}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onCheckboxChange":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"custom-dropzone","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":14,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵe"},"multi":true}],"template":"<dropzone (removedFile)=\"onFileRemoved($event)\" [config]=\"config\" [message]=\"message\" (error)=\"onUploadError($event)\" (success)=\"onUploadSuccess($event)\"></dropzone>\n\n<div class=\"preview-frame\" *ngIf=\"showPreview\">\n    <p>Descriptive images of the product</p>\n    <div *ngIf=\"maxFiles !== 1\">\n        <span class=\"group-item\" *ngFor=\"let item of value\">\n            <img class=\"singleImg\" width=\"120\" height=\"120\" [src]=\"item\" alt=\"\">\n            <span (click)=\"deleteItem(item)\">Remove File</span>\n        </span>\n    </div>\n    <div *ngIf=\"maxFiles == 1\">\n        <img class=\"singleImg\" width=\"120\" height=\"120\" [src]=\"value\" alt=\"\">\n    </div>\n</div>\n\n<div class=\"btn-reset\">\n    <a class=\"btn btn-primary\" (click)=onReset()>Reset</a>\n</div>\n","styles":[".singleImg{border:1px solid #000;padding:3px;margin-right:5px}.preview-frame{padding:8px}.preview-frame .group-item{position:relative}.preview-frame .group-item span{position:absolute;top:73px;left:18px;cursor:pointer}p{padding:8px 16px;text-align:center;border:2px dashed;color:#666;font-size:14px;letter-spacing:1px;background:#dcdcdc}.btn-reset{text-align:right}.btn-reset a{margin:8px;color:#fff}"]}]}],"members":{"message":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"upload_path":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"acceptedFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"maxFilesize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"maxFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"showPreview":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"oldValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"headers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"paramName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"resultTransformer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":3}}]}],"componentRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":56,"character":3},"arguments":[{"__symbolic":"reference","module":"ngx-dropzone-wrapper","name":"DropzoneComponent","line":56,"character":13}]}]}],"directiveRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":58,"character":3},"arguments":[{"__symbolic":"reference","module":"ngx-dropzone-wrapper","name":"DropzoneDirective","line":58,"character":13}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":61,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":61,"character":61}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onUploadError":[{"__symbolic":"method"}],"onUploadSuccess":[{"__symbolic":"method"}],"onReset":[{"__symbolic":"method"}],"onFileRemoved":[{"__symbolic":"method"}],"deleteItem":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"custom-date-time-picker","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":11,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵf"},"multi":true}],"template":"<p-calendar \n  [(ngModel)]=\"value\" \n  [showIcon]=\"showIcon\"\n\n  [monthNavigator]=\"monthNavigator\" \n  [yearNavigator]=\"yearNavigator\" \n  yearRange=\"{{yearRange}}\"\n\n  [showTime]=\"showTime\"\n\n  [timeOnly]=\"timeOnly\"\n\n  dateFormat=\"{{dateFormat}}\"\n\n  (onSelect)=\"change(value)\"\n  >\n</p-calendar>","styles":[""]}]}],"members":{"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"showIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"monthNavigator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"yearNavigator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"yearRange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"showTime":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"timeOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"dateFormat":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":49,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":49,"character":61}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"change":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"app-phone-input","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":10,"character":13},"useExisting":{"__symbolic":"reference","name":"ɵg"},"multi":true}],"template":"<div class=\"phone-box form-group\">\n  <select #country (change)=\"selectCountry(country.value)\" class=\"phone-code\" [(ngModel)]=\"phoneData.code\">\n    <option value=\"{{ country.callingCodes[0] }}\" *ngFor=\"let country of COUNTRIES\">\n      <span>{{ country.name }}</span>\n    </option>\n  </select>\n  <div class=\"phone-number-box\">\n    <span class=\"plus-code\" *ngIf=\"phoneData.code\">(+{{ phoneData.code }}) </span>\n    <input type=\"text\" #phone (change)=\"enterPhone(phone.value)\" class=\"phone-value\" [(ngModel)]=\"phoneData.value\">\n  </div>\n</div>\n","styles":[".phone-box{position:relative;clear:both;border:1px solid #ccc;height:31px}.phone-box .phone-code{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;background-color:#333;color:#fff;border-radius:0;float:left;padding:5px;margin-right:10px;width:120px}.phone-box .phone-number-box{line-height:27px}.phone-box .phone-number-box .phone-value{border:0;background-color:transparent;width:125px}"]}]}],"members":{"_phoneData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"selectCountry":[{"__symbolic":"method"}],"enterPhone":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"app-custom-select2","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":12,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵh"},"multi":true}],"template":"<select id=\"select2-reactive-form\" class=\"form-control\" multiple select2>\n  <option *ngFor=\"let opt of options\" value=\"{{ opt.value }}\" selected=\"{{ opt.selected }}\">{{ opt.label }}</option>\n</select>\n","styles":[""]}]}],"members":{"tags":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":34,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":34,"character":61}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"custom-checkbox","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":11,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵi"},"multi":true}],"template":"<input type=\"checkbox\" [(ngModel)]=\"value\" (change)=\"onChangeFunction()\">\n","styles":[""]}]}],"members":{"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":26,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":26,"character":61}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onChangeFunction":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"upload-images","providers":[{"__symbolic":"reference","name":"ɵk"},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":14,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵj"},"multi":true}],"template":"<div class=\"row\">\n  <div class=\"signle-img\" *ngIf=\"!multiple\">\n    <img [src]=\"value\" width=\"100\" height=\"100\" alt=\"\">\n  </div>\n  <div class=\"mutil-img\" *ngIf=\"multiple === 'true'\">\n    <div class=\"group-item\" *ngFor=\"let item of value\">\n      <img class=\"singleImg\" width=\"100\" height=\"100\" [src]=\"item\" alt=\"\">\n      <span (click)=\"deleteItem(item)\">Remove</span>\n    </div>\n  </div>\n  <img class=\"add-icon\" id=\"uploadfile-reactive-form\" width=\"100\" height=\"100\" src=\"https://mbtskoudsalg.com/images/how-to-add-a-png-to-a-photo.png\" alt=\"\">\n</div>\n","styles":[".row{margin-top:15px}.mutil-img .group-item .singleImg,.signle-img{border:1px solid grey;padding:3px}.mutil-img,.signle-img{margin-bottom:30px;display:inline-block}.mutil-img .group-item{display:inline-block;position:relative;margin-right:5px}.mutil-img .group-item span{position:absolute;left:50%;bottom:-15px;margin-left:-25px;cursor:pointer}.mutil-img .group-item span:hover{text-decoration:underline;color:grey}.add-icon{margin-left:30px;cursor:pointer}"]}]}],"members":{"headers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"apiUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"accept":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"subProgress":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"subError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"allowMaxSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"uploadPath":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"multiple":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"_value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"resultTransformer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":3}}]}],"paramName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":59,"character":57},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":59,"character":87}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"getFileExtension":[{"__symbolic":"method"}],"validateFile":[{"__symbolic":"method"}],"upload":[{"__symbolic":"method"}],"deleteItem":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":13,"character":20}]}],"upload":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"reactive-form","providers":[{"__symbolic":"reference","name":"ɵm"}],"template":"<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\r\n  <div class=\"row\">\r\n    <div class=\"dynamic-collection\" *ngFor=\"let group of groups\" [ngClass]=\"group.classes\">\r\n      <div class=\"row\">\r\n        <div *ngFor=\"let input of group.items\" class=\"dynamic-input-group\" [ngClass]=\"input.classes\">\r\n          <dynamic-input [input]=\"input\" [form]=\"form\" [submitted]=\"submitted\"></dynamic-input>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"dynamic-submit-btn\">\r\n    <button type=\"submit\" [ngClass]=\"{'disabled': !form.valid}\" class=\"btn btn-primary m-r-15 ripple light\">\r\n      <i class=\"icofont icofont-plus m-r-5\"></i> {{ submitText !== undefined ? submitText : 'Submit' }}\r\n    </button>\r\n  </div>\r\n</form>","styles":[":host .dynamic-collection{margin-bottom:10px}"]}]}],"members":{"inputs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"onSubmit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"submitText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵm"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"submit":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"toFormGroup":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"dynamic-input","template":"<div [formGroup]=\"form\">\r\n  <div [ngSwitch]=\"input.controlType\">\r\n    <div *ngSwitchCase=\"'textbox'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <input [placeholder]=\"input.placeholder\" class=\"form-control\" [formControlName]=\"input.key\" [type]=\"input.type\">\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'textarea'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div>\r\n          <textarea [rows]=\"input.rows\" id=\"textarea\" [formControlName]=\"input.key\"></textarea>\r\n        </div>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"flex-row\" *ngSwitchCase=\"'dropdown'\">\r\n      <div class=\"reactive-form-group\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <select [formControlName]=\"input.key\" class=\"form-control\">\r\n          <option *ngFor=\"let opt of input.options\" [ngValue]=\"opt\">{{opt.label}}</option>\r\n        </select>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'radio'\">\r\n      <label class=\"float-label\">{{input.label}}</label>\r\n      <div class=\"form-primary\">\r\n        <div class=\"form-radio\">\r\n          <div class=\"group-add-on\">\r\n            <div class=\"radio radiofill\" *ngFor=\"let opt of input.options\">\r\n              <label>\r\n                <input type=\"radio\" [formControlName]=\"input.key\" [value]=\"opt.value\">\r\n                <i class=\"helper\"></i> {{ opt.label }}\r\n              </label>\r\n            </div>\r\n            <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n              <div *ngFor=\"let validator of input.validators\">\r\n                <div *ngIf=\"validator.label === validatorForm\">\r\n                  {{ validator.message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'custom_dropdown'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <custom-selection [formControlName]=\"input.key\" name=\"test-dropdown\" [(options)]=\"input.options\"></custom-selection>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'tinymce'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <editor [formControlName]=\"input.key\" [init]=\"{ branding: false, height : input.height, plugins: input.plugins}\"></editor>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'checkbox'\" style=\"padding: 0 15px;\">\r\n      <div class=\"form-primary\">\r\n        <input [formControlName]=\"input.key\" [(ngModel)]=\"input.value\" [id]=\"input.key\" type=\"checkbox\" (change)=\"input.value = ckb.checked\"\r\n          #ckb>\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'list-checkbox'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <mutiple-checkbox [formControlName]=\"input.key\" [(options)]=\"input.options\"></mutiple-checkbox>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'textbox-mask'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <mask-input [formControlName]=\"input.key\" [placeholder]=\"input.placeholder\" [guide]=\"input.guide\" [valueWithCharacter]=\"input.valueWithCharacter\"\r\n          [inputMaskText]=\"input.mask\"></mask-input>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'dropzone'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <custom-dropzone [headers]=\"input.headers\" [resultTransformer]=\"input.resultTransformer\" [paramName]=\"input.paramName\" [url]=\"input.url\"\r\n          [formControlName]=\"input.key\" [oldValue]=\"input.value\" [showPreview]=\"input.showPreview\" [maxFiles]=\"input.maxFiles\"\r\n          [maxFilesize]=\"input.maxFilesize\" [acceptedFiles]=\"input.acceptedFiles\" [message]=\"input.message\" [upload_path]=\"input.upload_path\"></custom-dropzone>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'datetimepicker'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <custom-date-time-picker [dateFormat]=\"input.dateFormat\" [timeOnly]=\"input.timeOnly\" [showTime]=\"input.showTime\" [yearRange]=\"input.yearRange\"\r\n            [yearNavigator]=\"input.yearNavigator\" [monthNavigator]=\"input.monthNavigator\" [showIcon]=\"input.showIcon\" [formControlName]=\"input.key\"></custom-date-time-picker>\r\n          <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n            <div *ngFor=\"let validator of input.validators\">\r\n              <div *ngIf=\"validator.label === validatorForm\">\r\n                {{ validator.message }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'phonecode'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <app-phone-input [formControlName]=\"input.key\"></app-phone-input>\r\n          <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n            <div *ngFor=\"let validator of input.validators\">\r\n              <div *ngIf=\"validator.label === validatorForm\">\r\n                {{ validator.message }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'select2'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <app-custom-select2 [formControlName]=\"input.key\" [placeholder]=\"input.placeholder\" [tags]=\"input.tags\" [options]=\"input.options\"></app-custom-select2>\r\n          <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n            <div *ngFor=\"let validator of input.validators\">\r\n              <div *ngIf=\"validator.label === validatorForm\">\r\n                {{ validator.message }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'custom_checkbox'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <custom-checkbox [formControlName]=\"input.key\" [onChange]=\"input.onChange\"></custom-checkbox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'uploadfile'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <upload-images [formControlName]=\"input.key\" [resultTransformer]=\"input.resultTransformer\" [paramName]=\"input.paramName\" [uploadPath]=\"input.uploadPath\" [multiple]=\"input.multiple\" [headers]=\"input.headers\" [apiUpload]=\"input.apiUpload\" [accept]=\"input.accept\" [allowMaxSize]=\"input.allowMaxSize\"></upload-images>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","styles":[":host .reactive-form-group label{font-size:12px;margin-bottom:0}:host #textarea{width:100%}"]}]}],"members":{"input":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"submitted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}]}}},"origins":{"AngularReactiveFormComponent":"./lib/angular-reactive-form.component","AngularReactiveFormModule":"./lib/angular-reactive-form.module","VALIDATOR_REQUIRED":"./lib/components/reactive-form/reactive-form.consts","VALIDATOR_PATTERN":"./lib/components/reactive-form/reactive-form.consts","VALIDATOR_MINLENGTH":"./lib/components/reactive-form/reactive-form.consts","VALIDATOR_MAXLENGTH":"./lib/components/reactive-form/reactive-form.consts","CustomDropdown":"./lib/models/CustomDropdown","TextBox":"./lib/models/TextBox","DropZone":"./lib/models/DropZone","CheckBox":"./lib/models/CheckBox","Dropdown":"./lib/models/Dropdown","ListCheckBox":"./lib/models/ListCheckBox","Radio":"./lib/models/Radio","TextBoxMask":"./lib/models/TextBoxMask","TinyMce":"./lib/models/TinyMce","DateTimePicker":"./lib/models/DateTimePicker","PhoneCode":"./lib/models/PhoneCode","Select2":"./lib/models/Select2","InputBase":"./lib/models/InputBase","CustomCheckBox":"./lib/models/CustomCheckbox","TextArea":"./lib/models/TextArea","UploadFile":"./lib/models/UploadFile","ɵa":"./lib/directives/directives.module","ɵb":"./lib/directives/custom-selection/custom-selection.component","ɵc":"./lib/directives/mask-input/mask-input.component","ɵd":"./lib/directives/mutiple-checkbox/mutiple-checkbox.component","ɵe":"./lib/directives/dropzone/dropzone.component","ɵf":"./lib/directives/custom-date-time-picker/custom-date-time-picker.component","ɵg":"./lib/directives/phone-input/phone-input.component","ɵh":"./lib/directives/custom-select2/custom-select2.component","ɵi":"./lib/directives/custom-checkbox/custom-checkbox.component","ɵj":"./lib/directives/upload-images/upload-images.component","ɵk":"./lib/directives/upload-images/test","ɵl":"./lib/components/reactive-form/reactive-form.component","ɵm":"./lib/services/form-control.service","ɵn":"./lib/components/dynamic-input/dynamic-input.component"},"importAs":"angular-reactive-form"}