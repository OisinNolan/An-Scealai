/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FormControlService } from '../../services/form-control.service';
import * as _ from 'lodash';
export class ReactiveFormComponent {
    /**
     * @param {?} fcs
     */
    constructor(fcs) {
        this.fcs = fcs;
        this.groups = [];
        this.inputs = [];
        this.submitted = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        /** @type {?} */
        let groups = [];
        /** @type {?} */
        let grouped = _.groupBy(this.inputs, 'group');
        // tslint:disable-next-line:forin
        for (let k in grouped) {
            groups.push({
                group: k,
                items: grouped[k],
                classes: _.head(grouped[k]).group_classes
            });
        }
        this.groups = groups;
        this.form = this.fcs.toFormGroup(this.inputs);
    }
    /**
     * @return {?}
     */
    submit() {
        this.submitted = true;
        if (this.form.invalid) {
            return false;
        }
        if (this.onSubmit !== undefined) {
            this.onSubmit.apply(null, [this.form]);
        }
    }
}
ReactiveFormComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'reactive-form',
                template: "<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\r\n  <div class=\"row\">\r\n    <div class=\"dynamic-collection\" *ngFor=\"let group of groups\" [ngClass]=\"group.classes\">\r\n      <div class=\"row\">\r\n        <div *ngFor=\"let input of group.items\" class=\"dynamic-input-group\" [ngClass]=\"input.classes\">\r\n          <dynamic-input [input]=\"input\" [form]=\"form\" [submitted]=\"submitted\"></dynamic-input>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"dynamic-submit-btn\">\r\n    <button type=\"submit\" [ngClass]=\"{'disabled': !form.valid}\" class=\"btn btn-primary m-r-15 ripple light\">\r\n      <i class=\"icofont icofont-plus m-r-5\"></i> {{ submitText !== undefined ? submitText : 'Submit' }}\r\n    </button>\r\n  </div>\r\n</form>",
                providers: [FormControlService],
                styles: [":host .dynamic-collection{margin-bottom:10px}"]
            }] }
];
ReactiveFormComponent.ctorParameters = () => [
    { type: FormControlService }
];
ReactiveFormComponent.propDecorators = {
    inputs: [{ type: Input }],
    onSubmit: [{ type: Input }],
    submitText: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ReactiveFormComponent.prototype.groups;
    /** @type {?} */
    ReactiveFormComponent.prototype.inputs;
    /** @type {?} */
    ReactiveFormComponent.prototype.onSubmit;
    /** @type {?} */
    ReactiveFormComponent.prototype.submitText;
    /** @type {?} */
    ReactiveFormComponent.prototype.form;
    /** @type {?} */
    ReactiveFormComponent.prototype.submitted;
    /** @type {?} */
    ReactiveFormComponent.prototype.fcs;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3RpdmUtZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXJlYWN0aXZlLWZvcm0vIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9yZWFjdGl2ZS1mb3JtL3JlYWN0aXZlLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFFbkYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDekUsT0FBTyxLQUFLLENBQUMsTUFBTSxRQUFRLENBQUM7QUFVNUIsTUFBTTs7OztJQVFKLFlBQW9CLEdBQXVCO1FBQXZCLFFBQUcsR0FBSCxHQUFHLENBQW9CO1FBUDNDLFdBQU0sR0FBcUIsRUFBRSxDQUFDO1FBQ3JCLFdBQU0sR0FBcUIsRUFBRSxDQUFDO1FBS3ZDLGNBQVMsR0FBWSxLQUFLLENBQUM7SUFHM0IsQ0FBQzs7OztJQUVELFFBQVEsS0FBSyxDQUFDOzs7OztJQUVkLFdBQVcsQ0FBQyxPQUFzQjs7WUFDNUIsTUFBTSxHQUFHLEVBQUU7O1lBQ1gsT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUM7UUFDN0MsaUNBQWlDO1FBQ2pDLEtBQUssSUFBSSxDQUFDLElBQUksT0FBTyxFQUFFO1lBQ3JCLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBQ1YsS0FBSyxFQUFFLENBQUM7Z0JBQ1IsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWE7YUFDMUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDckIsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUNELElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDeEM7SUFFSCxDQUFDOzs7WUE3Q0YsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsaXlCQUE2QztnQkFFN0MsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7O2FBQ2hDOzs7WUFWUSxrQkFBa0I7OztxQkFheEIsS0FBSzt1QkFDTCxLQUFLO3lCQUNMLEtBQUs7Ozs7SUFITix1Q0FBOEI7O0lBQzlCLHVDQUF1Qzs7SUFDdkMseUNBQTZCOztJQUM3QiwyQ0FBNkI7O0lBQzdCLHFDQUFnQjs7SUFFaEIsMENBQTJCOztJQUNmLG9DQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgU2ltcGxlQ2hhbmdlcywgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IElucHV0QmFzZSB9IGZyb20gJy4uLy4uL21vZGVscy9JbnB1dEJhc2UnO1xyXG5pbXBvcnQgeyBGb3JtQ29udHJvbFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9mb3JtLWNvbnRyb2wuc2VydmljZSc7XHJcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcclxuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAncmVhY3RpdmUtZm9ybScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3JlYWN0aXZlLWZvcm0uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3JlYWN0aXZlLWZvcm0uY29tcG9uZW50LnNjc3MnXSxcclxuICBwcm92aWRlcnM6IFtGb3JtQ29udHJvbFNlcnZpY2VdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSZWFjdGl2ZUZvcm1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgZ3JvdXBzOiBJbnB1dEJhc2U8YW55PltdID0gW107XHJcbiAgQElucHV0KCkgaW5wdXRzOiBJbnB1dEJhc2U8YW55PltdID0gW107XHJcbiAgQElucHV0KCkgb25TdWJtaXQ/OiBGdW5jdGlvbjtcclxuICBASW5wdXQoKSBzdWJtaXRUZXh0PzogU3RyaW5nO1xyXG4gIGZvcm06IEZvcm1Hcm91cDtcclxuICBcclxuICBzdWJtaXR0ZWQ6IEJvb2xlYW4gPSBmYWxzZTtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZjczogRm9ybUNvbnRyb2xTZXJ2aWNlKSB7XHJcbiAgIFxyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7IH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgbGV0IGdyb3VwcyA9IFtdO1xyXG4gICAgbGV0IGdyb3VwZWQgPSBfLmdyb3VwQnkodGhpcy5pbnB1dHMsICdncm91cCcpO1xyXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmZvcmluXHJcbiAgICBmb3IgKGxldCBrIGluIGdyb3VwZWQpIHtcclxuICAgICAgZ3JvdXBzLnB1c2goe1xyXG4gICAgICAgIGdyb3VwOiBrLFxyXG4gICAgICAgIGl0ZW1zOiBncm91cGVkW2tdLFxyXG4gICAgICAgIGNsYXNzZXM6IF8uaGVhZChncm91cGVkW2tdKS5ncm91cF9jbGFzc2VzXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgdGhpcy5ncm91cHMgPSBncm91cHM7XHJcbiAgICB0aGlzLmZvcm0gPSB0aGlzLmZjcy50b0Zvcm1Hcm91cCh0aGlzLmlucHV0cyk7XHJcbiAgfVxyXG5cclxuICBzdWJtaXQoKSB7XHJcbiAgICB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7XHJcbiAgICBpZiAodGhpcy5mb3JtLmludmFsaWQpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMub25TdWJtaXQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aGlzLm9uU3VibWl0LmFwcGx5KG51bGwsIFt0aGlzLmZvcm1dKTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG59XHJcbiJdfQ==