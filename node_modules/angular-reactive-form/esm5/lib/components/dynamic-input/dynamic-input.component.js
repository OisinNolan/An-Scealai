/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { InputBase } from '../../models/InputBase';
var DynamicInputComponent = /** @class */ (function () {
    function DynamicInputComponent() {
    }
    Object.defineProperty(DynamicInputComponent.prototype, "isValid", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.form.controls[this.input.key].errors) {
                this.validatorForm = Object.keys(this.form.controls[this.input.key].errors)[0];
            }
            return this.submitted && this.form.controls[this.input.key].valid;
        },
        enumerable: true,
        configurable: true
    });
    DynamicInputComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'dynamic-input',
                    template: "<div [formGroup]=\"form\">\r\n  <div [ngSwitch]=\"input.controlType\">\r\n    <div *ngSwitchCase=\"'textbox'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <input [placeholder]=\"input.placeholder\" class=\"form-control\" [formControlName]=\"input.key\" [type]=\"input.type\">\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'textarea'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div>\r\n          <textarea [rows]=\"input.rows\" id=\"textarea\" [formControlName]=\"input.key\"></textarea>\r\n        </div>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"flex-row\" *ngSwitchCase=\"'dropdown'\">\r\n      <div class=\"reactive-form-group\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <select [formControlName]=\"input.key\" class=\"form-control\">\r\n          <option *ngFor=\"let opt of input.options\" [ngValue]=\"opt\">{{opt.label}}</option>\r\n        </select>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'radio'\">\r\n      <label class=\"float-label\">{{input.label}}</label>\r\n      <div class=\"form-primary\">\r\n        <div class=\"form-radio\">\r\n          <div class=\"group-add-on\">\r\n            <div class=\"radio radiofill\" *ngFor=\"let opt of input.options\">\r\n              <label>\r\n                <input type=\"radio\" [formControlName]=\"input.key\" [value]=\"opt.value\">\r\n                <i class=\"helper\"></i> {{ opt.label }}\r\n              </label>\r\n            </div>\r\n            <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n              <div *ngFor=\"let validator of input.validators\">\r\n                <div *ngIf=\"validator.label === validatorForm\">\r\n                  {{ validator.message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'custom_dropdown'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <custom-selection [formControlName]=\"input.key\" name=\"test-dropdown\" [(options)]=\"input.options\"></custom-selection>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'tinymce'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <editor [formControlName]=\"input.key\" [init]=\"{ branding: false, height : input.height, plugins: input.plugins}\"></editor>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'checkbox'\" style=\"padding: 0 15px;\">\r\n      <div class=\"form-primary\">\r\n        <input [formControlName]=\"input.key\" [(ngModel)]=\"input.value\" [id]=\"input.key\" type=\"checkbox\" (change)=\"input.value = ckb.checked\"\r\n          #ckb>\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'list-checkbox'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <mutiple-checkbox [formControlName]=\"input.key\" [(options)]=\"input.options\"></mutiple-checkbox>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'textbox-mask'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <mask-input [formControlName]=\"input.key\" [placeholder]=\"input.placeholder\" [guide]=\"input.guide\" [valueWithCharacter]=\"input.valueWithCharacter\"\r\n          [inputMaskText]=\"input.mask\"></mask-input>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'dropzone'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <custom-dropzone [headers]=\"input.headers\" [resultTransformer]=\"input.resultTransformer\" [paramName]=\"input.paramName\" [url]=\"input.url\"\r\n          [formControlName]=\"input.key\" [oldValue]=\"input.value\" [showPreview]=\"input.showPreview\" [maxFiles]=\"input.maxFiles\"\r\n          [maxFilesize]=\"input.maxFilesize\" [acceptedFiles]=\"input.acceptedFiles\" [message]=\"input.message\" [upload_path]=\"input.upload_path\"></custom-dropzone>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'datetimepicker'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <custom-date-time-picker [dateFormat]=\"input.dateFormat\" [timeOnly]=\"input.timeOnly\" [showTime]=\"input.showTime\" [yearRange]=\"input.yearRange\"\r\n            [yearNavigator]=\"input.yearNavigator\" [monthNavigator]=\"input.monthNavigator\" [showIcon]=\"input.showIcon\" [formControlName]=\"input.key\"></custom-date-time-picker>\r\n          <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n            <div *ngFor=\"let validator of input.validators\">\r\n              <div *ngIf=\"validator.label === validatorForm\">\r\n                {{ validator.message }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'phonecode'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <app-phone-input [formControlName]=\"input.key\"></app-phone-input>\r\n          <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n            <div *ngFor=\"let validator of input.validators\">\r\n              <div *ngIf=\"validator.label === validatorForm\">\r\n                {{ validator.message }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'select2'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <app-custom-select2 [formControlName]=\"input.key\" [placeholder]=\"input.placeholder\" [tags]=\"input.tags\" [options]=\"input.options\"></app-custom-select2>\r\n          <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n            <div *ngFor=\"let validator of input.validators\">\r\n              <div *ngIf=\"validator.label === validatorForm\">\r\n                {{ validator.message }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'custom_checkbox'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <div class=\"form-group\">\r\n          <custom-checkbox [formControlName]=\"input.key\" [onChange]=\"input.onChange\"></custom-checkbox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'uploadfile'\">\r\n      <div class=\"form-primary\">\r\n        <label class=\"float-label\">{{input.label}}</label>\r\n        <upload-images [formControlName]=\"input.key\" [resultTransformer]=\"input.resultTransformer\" [paramName]=\"input.paramName\" [uploadPath]=\"input.uploadPath\" [multiple]=\"input.multiple\" [headers]=\"input.headers\" [apiUpload]=\"input.apiUpload\" [accept]=\"input.accept\" [allowMaxSize]=\"input.allowMaxSize\"></upload-images>\r\n        <div class=\"errorMessage messages text-danger\" *ngIf=\"submitted && !isValid\">\r\n          <div *ngFor=\"let validator of input.validators\">\r\n            <div *ngIf=\"validator.label === validatorForm\">\r\n              {{ validator.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n",
                    styles: [":host .reactive-form-group label{font-size:12px;margin-bottom:0}:host #textarea{width:100%}"]
                }] }
    ];
    DynamicInputComponent.propDecorators = {
        input: [{ type: Input }],
        form: [{ type: Input }],
        submitted: [{ type: Input }]
    };
    return DynamicInputComponent;
}());
export { DynamicInputComponent };
if (false) {
    /** @type {?} */
    DynamicInputComponent.prototype.input;
    /** @type {?} */
    DynamicInputComponent.prototype.form;
    /** @type {?} */
    DynamicInputComponent.prototype.submitted;
    /** @type {?} */
    DynamicInputComponent.prototype.validatorForm;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXJlYWN0aXZlLWZvcm0vIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9keW5hbWljLWlucHV0L2R5bmFtaWMtaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBR25EO0lBQUE7SUFzQkEsQ0FBQztJQU5DLHNCQUFJLDBDQUFPOzs7O1FBQVg7WUFDRSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFO2dCQUM3QyxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNoRjtZQUNELE9BQU8sSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNwRSxDQUFDOzs7T0FBQTs7Z0JBckJGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLG16VUFBNkM7O2lCQUU5Qzs7O3dCQUVFLEtBQUs7dUJBRUwsS0FBSzs0QkFFTCxLQUFLOztJQVdSLDRCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FoQlkscUJBQXFCOzs7SUFDaEMsc0NBQ3NCOztJQUN0QixxQ0FDZ0I7O0lBQ2hCLDBDQUNtQjs7SUFFbkIsOENBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL0lucHV0QmFzZSc7XHJcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcclxuICBzZWxlY3RvcjogJ2R5bmFtaWMtaW5wdXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9keW5hbWljLWlucHV0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9keW5hbWljLWlucHV0LmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIER5bmFtaWNJbnB1dENvbXBvbmVudCB7XHJcbiAgQElucHV0KClcclxuICBpbnB1dDogSW5wdXRCYXNlPGFueT47XHJcbiAgQElucHV0KClcclxuICBmb3JtOiBGb3JtR3JvdXA7XHJcbiAgQElucHV0KClcclxuICBzdWJtaXR0ZWQ6IEJvb2xlYW47XHJcblxyXG4gIHZhbGlkYXRvckZvcm07XHJcblxyXG4gIGdldCBpc1ZhbGlkKCkge1xyXG4gICAgaWYgKHRoaXMuZm9ybS5jb250cm9sc1t0aGlzLmlucHV0LmtleV0uZXJyb3JzKSB7XHJcbiAgICAgIHRoaXMudmFsaWRhdG9yRm9ybSA9IE9iamVjdC5rZXlzKHRoaXMuZm9ybS5jb250cm9sc1t0aGlzLmlucHV0LmtleV0uZXJyb3JzKVswXTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLnN1Ym1pdHRlZCAmJiB0aGlzLmZvcm0uY29udHJvbHNbdGhpcy5pbnB1dC5rZXldLnZhbGlkO1xyXG4gIH1cclxufVxyXG4iXX0=